// 8. Минимальный прямоугольник

// Ограничение времени 1 секунда
// Ограничение памяти	64Mb
// Ввод	стандартный ввод или input.txt
// Вывод стандартный вывод или output.txt

// На клетчатой плоскости закрашено K клеток.
// Требуется найти минимальный по площади прямоугольник, со сторонами,
// параллельными линиям сетки, покрывающий все закрашенные клетки.

// Формат ввода
// Во входном файле, на первой строке, находится число K (1 ≤ K ≤ 100).
// На следующих K строках находятся пары чисел Xi и Yi – координаты закрашенных клеток (|Xi|, |Yi| ≤ 109).

// Формат вывода
// Выведите в выходной файл координаты левого нижнего и правого верхнего углов прямоугольника.

// Пример
// Ввод           	Вывод
// 3                1 1 5 10
// 1 1
// 1 10
// 5 5

const getAngles = (coordsArr) => {
  const x = [];
  const y = [];

  for (let coord of coordsArr) {
    const [curX, curY] = coord;

    x.push(curX);
    y.push(curY);
  }

  return [Math.min(...x), Math.min(...y), Math.max(...x), Math.max(...y)].join(' ')
};

const fs = require('fs');
const [[k], ...coords] = fs.readFileSync('input.txt', 'utf-8').trim().split('\n').map(
  line => line.trim().split(' ').map(Number)
);

console.log(getAngles(coords));