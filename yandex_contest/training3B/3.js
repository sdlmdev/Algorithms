// 3. Коллекционер Диего

// Ограничение времени	2 секунды
// Ограничение памяти	256Mb
// Ввод	стандартный ввод или input.txt
// Вывод стандартный вывод или output.txt

// Диего увлекается коллекционированием наклеек.
// На каждой из них написано число, и каждый коллекционер мечтает собрать наклейки со всеми встречающимися числами.

// Диего собрал N наклеек, некоторые из которых, возможно, совпадают.
// Как-то раз к нему пришли K коллекционеров. i-й из них собрал все наклейки с номерами не меньшими,
// чем pi. Напишите программу, которая поможет каждому из коллекционеров определить,
// сколько недостающих ему наклеек есть у Диего.
// Разумеется, гостей Диего не интересуют повторные экземпляры наклеек.

// Формат ввода
// В первой строке содержится единственное число N (0 ≤ N ≤ 100 000) — количество наклеек у Диего.

// В следующей строке содержатся N целых неотрицательных чисел (не обязательно различных) — номера наклеек Диего.
// Все номера наклеек не превосходят 109.

// В следующей строке содержится число K (0 ≤ K ≤ 100 000) — количество коллекционеров, пришедших к Диего.
// В следующей строке содержатся K целых чисел pi (0 ≤ pi ≤ 109), где pi — наименьший номер наклейки,
// не интересующий i-го коллекционера.

// Формат вывода
// Для каждого коллекционера в отдельной строке выведите количество различных чисел на наклейках,
// которые есть у Диего, но нет у этого коллекционера.

// Пример 1
// Ввод	        Вывод
// 1            0
// 5            1
// 2
// 4 6

// Пример 2
// Ввод	        Вывод
// 3            3
// 100 1 50     0
// 3            2
// 300 0 75

const bs = (arr, x) => {
  let l = 0;
  let r = arr.length;

  while (l < r) {
    const m = Math.floor((l + r) / 2);

    if (arr[m] < x) {
      l = m + 1;
    } else {
      r = m;
    }
  }

  return r;
};

const checkNum = (nDataArr, kDataArr) => {
  for (let num of kDataArr) {
    console.log(bs(nDataArr, num));
  }
};

const fs = require('fs');
let [[nLen], nArr, [kLen], kArr] = fs.readFileSync('input.txt', 'utf-8').split('\n').map(
  line => line.split(' ').map(Number)
);
nArr = Array.from(new Set(nArr)).sort((a, b) => a - b);

checkNum(nArr, kArr);