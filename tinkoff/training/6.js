// 6 задание
// Ограничение времени
// 1 секунда
// Ограничение памяти
// 256 МБ
// На физкультуре происходит разбиение по двум командам. Ребята выстроены в шеренгу, у каждого из них есть свой рост ai Разбиение по командам произойдет по принципу «четный-нечетный» — все школьники с четным ростом отправляются в одну команду, а нечетные — в другую.

// В отличие от привычного урока, ребята не выстроились по росту. Вместо привычного порядка они встали случайно. Теперь физрук Яша смотрит на шеренгу и думает — может ли ровно одна пара учеников поменяться местами так, чтобы команды оказались такими же, как и по принципу «первый-второй». Иначе говоря, он хочет получить такой порядок, при котором все ученики с четным ростом стоят на четных позициях, а с нечетным — на нечетных.

// Помогите Яше найти нужную замену.

// Формат входных данных

// В первой строке находится число n(2≤n≤1000) — количество учеников в шеренге. 

// В следующей строке находится n натуральных чисел (1≤ai≤10**9) — рост учеников.

// Формат выходных данных
// В единственной строке выведите i и j — номера элементов, которые нужно поменять местами, чтобы добиться заданного условия (1≤i,j≤n,i=j). Если ответов несколько — разрешается вывести любой. 

// Если не существует способа поменять два элемента местами — выведите −1−1.

// Замечания 

// В первом примере хотя бы один ученик с четным ростом будет стоять на нечетной позиции. Во втором тесте замена приведет к неправильному состоянию.

// В третьем тесте из условия замена приведет шеренгу к валидному состоянию [1,2].

// Примеры данных
// Пример 1
// Ввод
// 4
// 2  1  4  6
// Вывод
// -1  -1
// Пример 2
// Ввод
// 2
// 1  2
// Вывод
// -1  -1
// Пример 3
// Ввод
// 2
// 2  1
// Вывод
// 1  2

const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout,
});

let n, lineCnt = 0;

readline.on('line', line => {
  if (lineCnt === 0) {
    n = +line.trim();
  } else {
    readline.close();
    const people = line.trim().split(' ').map(Number);
    people.unshift(0);
    const even = [];
    const odd = [];
    let res = [-1, -1];

    for (let i = 0; i < people.length; i += 1) {
      if (i % 2 !== 0 && people[i] % 2 === 0) even.push(i);
      if (i % 2 === 0 && people[i] % 2 !== 0) odd.push(i);
    }
    
    if (even.length === 1 && odd.length === 1) res = [even[0], odd[0]];
    else if (even.length === 0 && odd.length === 0 && people.length - 1 >= 3) res = [1, 3]

    console.log(res.join(' '));
  }

  lineCnt += 1;
});